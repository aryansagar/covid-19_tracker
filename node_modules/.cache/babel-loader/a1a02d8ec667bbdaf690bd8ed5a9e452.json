{"ast":null,"code":"var _jsxFileName = \"/Users/aryan/Desktop/Clever_programmer/covid_19_tracker/src/App.js\";\nimport { FormControl, MenuItem, Select, Card, CardContent } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport InfoBox from \"./InfoBox\";\nimport \"./App.css\";\nimport Table from \"./Table\";\nimport { sortData } from \"./util\";\nimport \"leaflet/dist/leaflet.css\";\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState([\"worldwide\"]);\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => {\n      setCountryInfo(data);\n    });\n  }, []);\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(data => {\n        const countries = data.map(country => ({\n          name: country.country,\n          value: country.countryInfo.iso2\n        }));\n        const sortedData = sortData(data);\n        setTableData(sortedData);\n        setCountries(countries);\n      });\n    };\n\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async (event) => {\n    const countryCode = event.target.value;\n    console.log(\"yooooo>>>>>\", countryCode);\n    setCountry(countryCode);\n    const url = countryCode === 'worldwide' ? 'https://disease.sh/v3/covid-19/all' : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url).then(response => response.json()).then(data => {\n      setCountry(countryCode);\n      setCountryInfo(data);\n    });\n  };\n\n  console.log(\"COUNTRY INFO >>>>\", countryInfo);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app_header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"COVID-19 TRACKER\"), /*#__PURE__*/React.createElement(FormControl, {\n    className: \"app_dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    variant: \"outlined\",\n    onChange: onCountryChange,\n    value: country,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"worldwide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }\n  }, \"worldwide\"), countries.map(country => /*#__PURE__*/React.createElement(MenuItem, {\n    value: country.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, country.name))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app_stats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"Coronavirus Cases\",\n    cases: countryInfo.todayCases,\n    total: countryInfo.cases,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"Recovered\",\n    cases: countryInfo.todayRecovered,\n    total: countryInfo.recovered,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"Deaths\",\n    cases: countryInfo.todayDeaths,\n    total: countryInfo.deaths,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }))), /*#__PURE__*/React.createElement(Card, {\n    className: \"app_right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 8\n    }\n  }, \"live Case by country\"), /*#__PURE__*/React.createElement(Table, {\n    countries: tableData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 8\n    }\n  }, \" worldwide new case \"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 8\n    }\n  }, \"sometimes it's\"))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/aryan/Desktop/Clever_programmer/covid_19_tracker/src/App.js"],"names":["FormControl","MenuItem","Select","Card","CardContent","React","useState","useEffect","InfoBox","Table","sortData","App","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","tableData","setTableData","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","sortedData","onCountryChange","event","countryCode","target","console","log","url","todayCases","cases","todayRecovered","recovered","todayDeaths","deaths"],"mappings":"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","sourcesContent":["import { FormControl, MenuItem,Select,Card,CardContent} from '@material-ui/core';\nimport React,{useState,useEffect} from 'react';\nimport InfoBox from \"./InfoBox\"\nimport \"./App.css\";\nimport Table from \"./Table\"\nimport {sortData} from \"./util\";\nimport \"leaflet/dist/leaflet.css\";\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country,setCountry] = useState([\"worldwide\"]);\n  const [countryInfo,setCountryInfo] = useState({});\n  const [tableData,setTableData] = useState([]);\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n    .then(response => response.json())\n    .then(data => {\n      setCountryInfo(data);\n    })\n  },[]);\n  useEffect(() => {\n   const getCountriesData = async () =>{\n    await fetch(\"https://disease.sh/v3/covid-19/countries\")\n  .then((response) => response.json())\n  .then((data) =>{\n    const countries = data.map((country)=>({\n      name :country.country,\n      value:country.countryInfo.iso2,\n    }));\n  const sortedData = sortData(data);\n  setTableData(sortedData);\n  setCountries(countries);\n\n  });\n\n};\ngetCountriesData();\n  },[]);\n\n  const onCountryChange = async (event) =>\n\n  {\n  const countryCode =event.target.value;\n    console.log(\"yooooo>>>>>\",countryCode)\n    setCountry(countryCode);\n\n    const url = countryCode ==='worldwide' ?\n    'https://disease.sh/v3/covid-19/all':`https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url)\n    .then(response => response.json())\n    .then(data => {\n      setCountry(countryCode);\n      setCountryInfo(data);\n\n    })\n  };\nconsole.log(\"COUNTRY INFO >>>>\",countryInfo);\n\n\n\n  return (\n  <div className=\"app\">\n   <div className=\"app__left\">\n\n       <div className = \"app_header\">\n      \n        <h1>COVID-19 TRACKER</h1>\n        <FormControl className = \"app_dropdown\">\n         <Select variant =\"outlined\" onChange ={onCountryChange} value= {country} >\n           <MenuItem value=\"worldwide\">worldwide</MenuItem>\n          {countries.map((country)=> (\n    \n          <MenuItem value={country.value}>{country.name}</MenuItem>\n            ))\n          }\n       \n        </Select>\n       </FormControl>\n      </div>\n     <div className=\"app_stats\">\n      <InfoBox title=\"Coronavirus Cases\" cases ={countryInfo.todayCases} total ={countryInfo.cases}/>\n      <InfoBox title=\"Recovered\" cases ={countryInfo.todayRecovered} total ={countryInfo.recovered}/>\n      <InfoBox title=\"Deaths\" cases={countryInfo.todayDeaths} total={countryInfo.deaths}/>\n     </div>\n    \n\n   </div>\n   <Card className=\"app_right\">\n     <CardContent>\n       <h3>live Case by country</h3>\n       <Table countries={tableData} />\n       <h3> worldwide new case </h3>\n       <h4>\nsometimes it's \n       </h4>\n      \n     </CardContent>\n\n    {/* Graph */}\n   </Card>\n  </div>\n  );\n }\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}