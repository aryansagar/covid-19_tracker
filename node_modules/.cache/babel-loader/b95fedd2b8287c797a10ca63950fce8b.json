{"ast":null,"code":"import _regeneratorRuntime from\"/Users/aryan/Desktop/Clever_programmer/covid_19_tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/aryan/Desktop/Clever_programmer/covid_19_tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/aryan/Desktop/Clever_programmer/covid_19_tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{FormControl,MenuItem,Select,Card,CardContent}from'@material-ui/core';import React,{useState,useEffect}from'react';import InfoBox from\"./InfoBox\";import\"./App.css\";import Table from\"./Table\";import{sortData}from\"./util\";import\"leaflet/dist/leaflet.css\";function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),countries=_useState2[0],setCountries=_useState2[1];var _useState3=useState([\"worldwide\"]),_useState4=_slicedToArray(_useState3,2),country=_useState4[0],setCountry=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),countryInfo=_useState6[0],setCountryInfo=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),tableData=_useState8[0],setTableData=_useState8[1];useEffect(function(){fetch(\"https://disease.sh/v3/covid-19/all\").then(function(response){return response.json();}).then(function(data){setCountryInfo(data);});},[]);useEffect(function(){var getCountriesData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://disease.sh/v3/covid-19/countries\").then(function(response){return response.json();}).then(function(data){var countries=data.map(function(country){return{name:country.country,value:country.countryInfo.iso2};});var sortedData=sortData(data);setTableData(sortedData);setCountries(countries);});case 2:case\"end\":return _context.stop();}}},_callee);}));return function getCountriesData(){return _ref.apply(this,arguments);};}();getCountriesData();},[]);var onCountryChange=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event){var countryCode,url;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:countryCode=event.target.value;console.log(\"yooooo>>>>>\",countryCode);setCountry(countryCode);url=countryCode==='worldwide'?'https://disease.sh/v3/covid-19/all':\"https://disease.sh/v3/covid-19/countries/\".concat(countryCode);_context2.next=6;return fetch(url).then(function(response){return response.json();}).then(function(data){setCountry(countryCode);setCountryInfo(data);});case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function onCountryChange(_x){return _ref2.apply(this,arguments);};}();console.log(\"COUNTRY INFO >>>>\",countryInfo);return/*#__PURE__*/React.createElement(\"div\",{className:\"app\"},/*#__PURE__*/React.createElement(\"div\",{className:\"app__left\"},/*#__PURE__*/React.createElement(\"div\",{className:\"app_header\"},/*#__PURE__*/React.createElement(\"h1\",null,\"COVID-19 TRACKER\"),/*#__PURE__*/React.createElement(FormControl,{className:\"app_dropdown\"},/*#__PURE__*/React.createElement(Select,{variant:\"outlined\",onChange:onCountryChange,value:country},/*#__PURE__*/React.createElement(MenuItem,{value:\"worldwide\"},\"worldwide\"),countries.map(function(country){return/*#__PURE__*/React.createElement(MenuItem,{value:country.value},country.name);})))),/*#__PURE__*/React.createElement(\"div\",{className:\"app_stats\"},/*#__PURE__*/React.createElement(InfoBox,{title:\"Coronavirus Cases\",cases:countryInfo.todayCases,total:countryInfo.cases}),/*#__PURE__*/React.createElement(InfoBox,{title:\"Recovered\",cases:countryInfo.todayRecovered,total:countryInfo.recovered}),/*#__PURE__*/React.createElement(InfoBox,{title:\"Deaths\",cases:countryInfo.todayDeaths,total:countryInfo.deaths}))),/*#__PURE__*/React.createElement(Card,{className:\"app_right\"},/*#__PURE__*/React.createElement(CardContent,null,/*#__PURE__*/React.createElement(\"h3\",null,\"live Case by country\"),/*#__PURE__*/React.createElement(Table,{countries:tableData}),/*#__PURE__*/React.createElement(\"h3\",null,\" worldwide new case \"))));}export default App;","map":{"version":3,"sources":["/Users/aryan/Desktop/Clever_programmer/covid_19_tracker/src/App.js"],"names":["FormControl","MenuItem","Select","Card","CardContent","React","useState","useEffect","InfoBox","Table","sortData","App","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","tableData","setTableData","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","sortedData","onCountryChange","event","countryCode","target","console","log","url","todayCases","cases","todayRecovered","recovered","todayDeaths","deaths"],"mappings":"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","sourcesContent":["import { FormControl, MenuItem,Select,Card,CardContent} from '@material-ui/core';\nimport React,{useState,useEffect} from 'react';\nimport InfoBox from \"./InfoBox\"\nimport \"./App.css\";\nimport Table from \"./Table\"\nimport {sortData} from \"./util\";\nimport \"leaflet/dist/leaflet.css\";\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country,setCountry] = useState([\"worldwide\"]);\n  const [countryInfo,setCountryInfo] = useState({});\n  const [tableData,setTableData] = useState([]);\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n    .then(response => response.json())\n    .then(data => {\n      setCountryInfo(data);\n    })\n  },[]);\n  useEffect(() => {\n   const getCountriesData = async () =>{\n    await fetch(\"https://disease.sh/v3/covid-19/countries\")\n  .then((response) => response.json())\n  .then((data) =>{\n    const countries = data.map((country)=>({\n      name :country.country,\n      value:country.countryInfo.iso2,\n    }));\n  const sortedData = sortData(data);\n  setTableData(sortedData);\n  setCountries(countries);\n\n  });\n\n};\ngetCountriesData();\n  },[]);\n\n  const onCountryChange = async (event) =>\n\n  {\n  const countryCode =event.target.value;\n    console.log(\"yooooo>>>>>\",countryCode)\n    setCountry(countryCode);\n\n    const url = countryCode ==='worldwide' ?\n    'https://disease.sh/v3/covid-19/all':`https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url)\n    .then(response => response.json())\n    .then(data => {\n      setCountry(countryCode);\n      setCountryInfo(data);\n\n    })\n  };\nconsole.log(\"COUNTRY INFO >>>>\",countryInfo);\n\n\n\n  return (\n  <div className=\"app\">\n   <div className=\"app__left\">\n\n       <div className = \"app_header\">\n      \n        <h1>COVID-19 TRACKER</h1>\n        <FormControl className = \"app_dropdown\">\n         <Select variant =\"outlined\" onChange ={onCountryChange} value= {country} >\n           <MenuItem value=\"worldwide\">worldwide</MenuItem>\n          {countries.map((country)=> (\n    \n          <MenuItem value={country.value}>{country.name}</MenuItem>\n            ))\n          }\n       \n        </Select>\n       </FormControl>\n      </div>\n     <div className=\"app_stats\">\n      <InfoBox title=\"Coronavirus Cases\" cases ={countryInfo.todayCases} total ={countryInfo.cases}/>\n      <InfoBox title=\"Recovered\" cases ={countryInfo.todayRecovered} total ={countryInfo.recovered}/>\n      <InfoBox title=\"Deaths\" cases={countryInfo.todayDeaths} total={countryInfo.deaths}/>\n     </div>\n    \n\n   </div>\n   <Card className=\"app_right\">\n     <CardContent>\n       <h3>live Case by country</h3>\n       <Table countries={tableData} />\n       <h3> worldwide new case </h3>\n      \n     </CardContent>\n\n    {/* Graph */}\n   </Card>\n  </div>\n  );\n }\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}